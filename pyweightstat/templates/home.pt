<!DOCTYPE html>
<html>
    <head>
        <link rel="icon" href="${request.static_url('pyweightstat:static/img/favicon.png')}" type="image/png">
         <link rel="stylesheet" type="text/css" href="${request.static_url('pyweightstat:static/css/default.css')}">
        <script src="${request.static_url('pyweightstat:static/js/chart.min.js')}"></script>
        <title>PyWeightStat</title>
	<style>
	</style>
    </head>
    <body>
	<div class="footer" id="footer-right">
	    &copy; Valentin Voigt
	</div>
	<div class="footer" id="footer-left">
	    chart by <a target="_blank" href="http://www.chartjs.org/">Chart.js</a>, icons by <a target="_blank" href="http://icons8.com/download-huge-windows8-set/">icons8</a>
	</div>
	<div id="center">
            <img src="${request.static_url('pyweightstat:static/img/scale.png')}">
	    <p>
            <b id="v" title="Stand: ${latest[-1].date}">${latest[-1].weight}</b>
		<span>kg</span>
	    </p>
	    <br>
	    <img src="${request.static_url('pyweightstat:static/img/planner.png')}">
	    <canvas id="chart" width="250" height="120"></canvas>
	    <br>
	</div>
        <script>
            function setVal(flt) {
                document.getElementById('v').innerHTML = flt.toFixed(1).replace('.', ',');
            }
            function getVal() {
                return document.getElementById('v').innerHTML.replace(',', '.');
            }
            function tick() {
                if (curr < dest) {
                    curr = curr + 2.0 + 2 * Math.random();
                    setVal(curr);

                    window.setTimeout(tick, 30);
                } else {
                    setVal(dest);
                }
            }
            var dest = parseFloat(getVal());
            var curr = 0.0;
            tick();

            var ctx = document.getElementById("chart").getContext("2d");
            var myNewChart = new Chart(ctx);

            var data = {
                labels : [${", ".join(["'%d.'" % i.date.day for i in latest])}],
                datasets : [
                {
                    fillColor : "rgba(151,187,205,0.5)",
                    strokeColor : "rgba(151,187,205,1)",
                    pointColor : "rgba(151,187,205,1)",
                    pointStrokeColor : "#fff",
                    data : [${", ".join(["%.1f" % i.weight for i in latest])}]
                }
            ]
        }
        new Chart(ctx).Line(data, {
            pointDotRadius: 3,
            scaleOverride: true,
            scaleSteps: 5,
            scaleStepWidth: ${max([(_max-_min)/5, 1])},
            scaleStartValue: ${_min-1},
        });
        </script>
        </body>
</html>
